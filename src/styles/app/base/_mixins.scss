//
// Mixins
// --------------------------------------------------

// Containers
@mixin inner-container-space-lg {
  padding: $src-container-horizontal-space-lg $src-container-vertical-space;
}

@mixin inner-container-space {
  padding: $src-container-horizontal-space $src-container-vertical-space;
}

@mixin hovering-container-border {
  box-shadow: 0 5px 7px 0 rgba(0, 0, 0, 0.20);
  border: 1px solid rgba(0, 0, 0, 0.10);
}

@mixin section-dividing-line {
  // the parent container must be relative and the psuedo element must be absolute instated of display:block
  // because any padding would push this border away.
  position: relative;

  border-top: 2px solid $src-super-dark;

  &:before {
    content: '';
    border-bottom: solid 2px $src-dark;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
  }
}

// Responsive Viewing
// --------------------------------------------------

//- conditional word wrapping http://www.css-101.org/articles/responsive-line-breaks/wbr-versus-br.php
//- http://stackoverflow.com/questions/10933837/line-break-like-br-using-only-css
@mixin conditional-line-break($min-width) {
  @media (min-width: $min-width) {
    &:after {
      content: '\a';
      white-space: pre;
    }
  }
}

// http://zerosixthree.se/8-sass-mixins-you-must-have-in-your-toolbox/
@mixin at-least-small-screen-styles {
  $rem-size: $src-screen-sm / $src-font-size-base;

  $break-size: $rem-size * 1em;

  @media only screen and (min-width: 1px /*$break-size hack: force large media query*/) {
    @content;
  }
}

// Images
// --------------------------------------------------

@mixin img-responsive-center($margin-vertical: 0) {
  img.img-responsive {
    margin: $margin-vertical auto;
  }
}

@mixin photo($dimension) {
  border: 1px solid $src-brighter;
  border-radius: 1px;
  width: $dimension;
  height: $dimension;

  box-sizing: content-box; // this will ensure the borders are always visible.

  img {
    max-width: $dimension;
    max-height: $dimension;
  }
}

// Font
// --------------------------------------------------

@function calculate-rem($pixel-size) {
  $rem-size: $pixel-size / $src-font-size-base;
  @return $rem-size * 1rem;
}

@mixin font-size($pixel-size) {
  // http: //zerosixthree.se/8-sass-mixins-you-must-have-in-your-toolbox/

  //noinspection CssOverwrittenProperties
  font-size: $pixel-size;
  //noinspection CssOverwrittenProperties
  font-size: calculate-rem($pixel-size);
}

// Buttons
// --------------------------------------------------
@mixin btn($btn-color, $shadow-color, $inset-shadow-alpha: .20) {
  background-image: linear-gradient($btn-color, darken($btn-color, 5%));

  box-shadow: 0 1px 3px 0 rgba($shadow-color, 0.50), inset 0 1px 0 0 rgba($src-very-bright, $inset-shadow-alpha);

  $active-background: linear-gradient(darken($btn-color, 5%), darken($btn-color, 10%));

  &:hover {
    background: $active-background;
    box-shadow: 0 1px 3px 1px rgba($shadow-color, 0.55);
  }

  &:active, &.active {
    background: $active-background;
    box-shadow: 0 1px 3px 0 rgba($shadow-color, 0.55), inset 0 3px 6px $src-very-dark;
  }
}

// Form
// --------------------------------------------------
@mixin form-input() {
  text-align: start; //dropdown buttons, for example, should have text all the way over.

  color: $src-less-dark;

  border: 1px solid $src-bright;
  box-shadow: inset 0 1px 1px 0 rgba(0, 0, 0, 0.10);
  border-radius: 3px;
}

@mixin input-focus {
  border-color: $src-more-brighter;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba($src-more-brighter, 0.6);
  outline: 0;
}
