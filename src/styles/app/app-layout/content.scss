@import "../base/variables";

// Content Layout
// --------------------------------------------------
#content-wrapper {
  background-color: $src-brighter;

  // make it grow as needed. This keeps the footer at the bottom.
  flex-grow: 1;

  .container, .container-fluid {
    margin-left: 0;
    padding: 0;
  }

  .content-enter {
    // ReactCSSTransitionGroup adds these classes dynamically
    // ActivityList uses this.
    opacity: 0.01;

    transition: opacity 0.15s linear;

    &.content-enter-active {
      opacity: 1;
    }
  }

  .content-leave {
    opacity: 1;

    transition: opacity 0.15s linear;

    &.content-leave-active {
      opacity: 0.01;
    }
  }

  .transition-content-wrapper {
    overflow: hidden;
    transition: height 0.20s linear;
    // http://stackoverflow.com/questions/19341546/why-this-css3-transition-on-height-does-not-work
    // http://stackoverflow.com/questions/13938460/css-transition-auto-height-not-working/13938747#13938747
  }

  .transition-content {
    transition: opacity 0.15s 0.30s linear;
  }

  .content-section {

    @include at-least-small-screen-styles {
      padding-left: $src-content-section-horizontal-space;
      padding-right: $src-content-section-horizontal-space;
    }

    &.alt-content-section {
      background: $src-very-bright;
    }

    &.space-top-lg {
      @include at-least-small-screen-styles {
        padding-top: $src-content-section-vertical-space-lg;
      }
    }

    &.space-top {
      @include at-least-small-screen-styles {
        padding-top: $src-content-section-vertical-space;
      }
    }

    &.space-top-md {
      @include at-least-small-screen-styles {
        padding-top: $src-content-section-vertical-space-md;
      }
    }

    &.space-top-sm {
      @include at-least-small-screen-styles {
        padding-top: $src-content-section-vertical-space-sm;
      }
    }

    &.space-bottom {
      @include at-least-small-screen-styles {
        padding-bottom: $src-content-section-vertical-space;
      }
    }

    &.space-bottom-md {
      @include at-least-small-screen-styles {
        padding-bottom: $src-content-section-vertical-space-md;
      }
    }

    &.space-bottom-sm {
      @include at-least-small-screen-styles {
        padding-bottom: $src-content-section-vertical-space-sm;
      }
    }
  }

  .content-section-header {

    color: $src-bright;

    text-transform: uppercase;

    @include at-least-small-screen-styles {

      @include font-size(18px);

      margin-bottom: $src-content-section-vertical-space-sm; // Doesn't affect forms with margin collapse.
    }

    &.regular-text {
      text-transform: none;
    }
  }

  .content-section-item {

    &.space-top-lg {
      @include at-least-small-screen-styles {
        margin-top: $src-content-section-vertical-space-lg; // Doesn't affect forms with margin collapse.
      }
    }

    &.space-top {
      @include at-least-small-screen-styles {
        margin-top: $src-content-section-vertical-space; // Doesn't affect forms with margin collapse.
      }
    }

    &.space-top-md {
      @include at-least-small-screen-styles {
        margin-top: $src-content-section-vertical-space-md; // Doesn't affect forms with margin collapse.
      }
    }

    &.space-top-sm {
      @include at-least-small-screen-styles {
        margin-top: $src-content-section-vertical-space-sm; // Doesn't affect forms with margin collapse.
      }
    }

    &.space-top-xxs {
      @include at-least-small-screen-styles {
        margin-top: $src-content-section-vertical-space-xxs;
      }
    }

    &.space-bottom-xl {
      @include at-least-small-screen-styles {
        margin-bottom: $src-content-section-vertical-space-xl;
      }
    }

    &.space-bottom {
      @include at-least-small-screen-styles {
        margin-bottom: $src-content-section-vertical-space; // Doesn't affect forms with margin collapse.
      }
    }

    &.space-bottom-sm {
      @include at-least-small-screen-styles {
        margin-bottom: $src-content-section-vertical-space-sm;
      }
    }

    &.space-bottom-xxs {
      @include at-least-small-screen-styles {
        margin-bottom: $src-content-section-vertical-space-xxs;
      }
    }

    &.space-left-sm {
      @include at-least-small-screen-styles {
        margin-left: $src-content-section-horizontal-space-sm;
      }
    }

    &.space-right-md {
      @include at-least-small-screen-styles {
        margin-right: $src-content-section-horizontal-space-md;
      }
    }

    &.space-right-sm {
      @include at-least-small-screen-styles {
        margin-right: $src-content-section-horizontal-space-sm;
      }
    }
  }

  .alt-content-page {
    //style fo background:. transition-wrapper already changes the height prop for the smooth transitions, so making its height 100 % won 't work there.
    //however, it seems weird to make the .content-wrapper flex-grow:1 given that child components can dictate the bground color.
    //we could use flux to allow the content-wrapper to determine its own style settings, but i feel like having multiple places (styles and scripts)
    //determine the style could be too much confusion.

    background: $src-very-bright;

    @include at-least-small-screen-styles {
      min-height: calc(100vh - #{$footer-height} - #{$header-height});
    }
  }
}
